                                     STRING PROBLEMS

1) Write a program to concatenate StringBuilder & StringBuffer objects.
-->>

package practice2;

public class Solution2 {

	public static void main(String[] args) {
		StringBuilder sb = new StringBuilder("deepanshu");
		System.out.println(sb);
		
		StringBuffer sf = new StringBuffer(" singh");
		System.out.println(sf);
			
		sb.append(sf);
		System.out.println("Concatenate: " + sb);

	}
}
-----------------------------------------------------------------------------------------------------
 
2)Write a program to get a substring of a StringBuffer.
-->>package practice2;

public class Solution4 {

	public static void main(String[] args) {
		StringBuffer sf = new StringBuffer("this is the best place of world");
		System.out.println(sf);
		System.out.println("Substring: " + sf.substring(5, 19));
	}

}
-------------------------------------------------------------------------------------------------------
3)Write a program to display the length and capacity of String, StringBuilder and StringBuffer.
--->>//Write a program to display the length and capacity of StringBuilder and StringBuffer

package practice2;
public class Solution3 {

	public static void main(String[] args) {
		StringBuilder sb = new StringBuilder("deepanshu");
		System.out.println(sb);
		
		StringBuffer sf = new StringBuffer(" singh");
		System.out.println(sf);
System.out.println("length and capacity of Stringbuilder");
		System.out.println("Length : " + sb.length());
		System.out.println("Capacity :" + sb.capacity());
		System.out.println("length and capacity of String buffer");
		System.out.println("Length : " + sf.length());
		System.out.println("Capacity : " + sf.capacity());
	}
}
------------------------------------------------------------------------------------------------------
4)Write a program to check whether two given strings contains same set of characters as well as having same length.

 input
 String s1 = "amar";
 String s2= "rama";
--->>package practice2;
import java.util.Arrays;
public class Solution {

		public static void main(String[] args) {
			
			String str1 = "amar";                 
			String str2 = "rama";
			char[] chars1 = str1.toCharArray();
			char[] chars2 = str2.toCharArray();
			Arrays.sort(chars1);
			Arrays.sort(chars2);

			if(Arrays.equals(chars1,chars2)) {
			        System.out.println(str1 + " and " + str2 + " have same set of character");
			} else {
			        System.out.println(str1 + " and " + str2 + " not have same set of character");
			}
			
			
			System.out.println("Length of str1: " + str1.length());
			System.out.println("Length of str2: " + str2.length());
			if(str1.length()==str2.length()) {  
	            System.out.println(str1 + " and " + str2 + " have same length");  
	        }  
	    
	        if(str2.length()!=str2.length()) {  
	            System.out.println(str1 + " and " + str2 + " not have the same length");  
	        } 
			
			
		}

	}

------------------------------------------------------------------------------------------------------
5)Write a program to lexicographically arrange the given strings
 "Raman" , "Aman" , "Vikram" , "Shyam" and "Bhuvan".
---->>package practice2;

import java.util.Arrays;

public class ArrangeProblem {

	public static void main(String[] args) {
		String s[] = {"Raman" , "Aman" , "Vikram" , "Shyam", "Bhuvan"};
		Arrays.sort(s);
		for(String s1:s) {
			System.out.print(s1 + " ");
		}
	}

}
------------------------------------------------------------------------------------------------------
                     WRAPPER CLASSES
6)Create objects of all the wrapper classes and print then on console, with using constructor.
--->>public class Wrapper {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Integer myInt = 10;
	    Double myDouble = 11.65;
	    Character myChar = 'T';
	    Boolean myBool= true;
	    System.out.println(myInt);
	    System.out.println(myDouble);
	    System.out.println(myChar);
	    System.out.println(myBool);

	}

}
-----------------------------------------------------------------------------------------------------
7)package wrapper;
public class BoxingUnboxing {

	public static void main(String[] args) {
		
		
        Integer objInteger = Integer.valueOf(10);
        
        int a = objInteger.intValue();

        System.out.println(a);
	}

}

--------------------------------------------------------------------------------------------------
8)
package wrapper;

import java.util.Scanner;

public class SumAndAverage {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Integer[] arr = {60, 12, 9, 60, 18};
        SumAndAverage obj = new SumAndAverage();
        Integer sum = obj.sum(arr);
        Integer numberOfElements = arr.length;
        Double ave = obj.average(sum, numberOfElements);
        System.out.println("sum = " + sum);
        System.out.println("average = " + ave);


    }

    public Double average(Integer sum, Integer numberOfElements) {
        Double response = 0.0;
        response = (double) sum / numberOfElements;
        return response;
    }

    public Integer sum(Integer[] arr) {
        Integer response = 0;
        for (Integer integer : arr) {
            response += integer;
        }
        return response;
    }

	}
=-----------------------------------------------------------------------------------------------------
10)
public class PrintASCIIValue {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Character obj = Character.valueOf('a');
        System.out.println((int)obj); 
		}  
	}
----------------------------------------------------------------------------------------------------
11)
//Create a List & Set of 10 integers and demonstrate ordered and unordered collection 
//as well as duplicate allowed and not allowed. Demonstrate addAll() method also.

package practice2;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;

public class Solution1{
    public static void main(String[] args) {
        ArrayList<Integer> integers = new ArrayList<>();

        integers.add(20);      
        integers.add(7);
        integers.add(60);
        integers.add(70);
        integers.add(50);
        integers.add(30);
        integers.add(250);
        integers.add(3);
        integers.add(2);
        integers.add(10);
      
        System.out.println(" list");
        System.out.println(integers);

       HashSet<Integer> integer = new HashSet<>();
       integer.add(2);
       integer.add(4);
       integer.add(7);
       integer.add(5);
       integer.add(11);
        integer.add(15);   
       System.out.println("set");
       System.out.println(integer);      
      integers.addAll(integer);
      
        System.out.println("list with added set");
        System.out.println(integers);
     
    }
}
-----------------------------------------------------------------------------------------------------
12)
Create a List of 10 Book objects, where Book is a user defined or custom class.
 Book class contains following field String bookName, String author, long isbn, & double price.
 Book class must be properly encapsulated and must implement data hiding. Book class contains
 parameterized constructors and no-argument constructor. Book class must override 
String toString() of Object 
class to represent Book object as string while printing.
 Kindly sort the list of book by price
-->package practice2;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Objects;

class Bookproblem1 implements Comparable<Bookproblem1> {
    private String name;
    private String author;
    private long isbn;
    private double price;

    public Bookproblem1( String name,String author,long isbn,double price ) {
    
        this.name = name;
       this.author=author;
       this.isbn=isbn;
       this.price=price;
    }

    public String getname() {
        return name;
    }
    public void setName(String name) {
        this.name = name;
    }
    public String getauthor()
    {
    	return author;
    }
    public void setauthor(String author) {
        this.author = author;
    }
    public long getisbn()
    {
    	return isbn;
    }
    public void setisbn(long isbn) {
        this.isbn = isbn;
    }
    public double getprice() {
        return price;
    }
    public void setprice(double price) {
        this.price = price;
    }
   
    @Override
	public int hashCode() {
		return Objects.hash(price);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Bookproblem1 other = (Bookproblem1) obj;
		return Double.doubleToLongBits(price) == Double.doubleToLongBits(other.price);
	}

	@Override
	public int compareTo(Bookproblem1 anotherBookproblem1) {
		return  (int) (this.getprice() - anotherBookproblem1.getprice());
		
	}

    }

public class Bookproblem{
public static void main(String[] args) {
    List<Bookproblem1> book = new ArrayList<>();
    book.add(new Bookproblem1("book1", "author1", 100 ,2000));
    book.add(new Bookproblem1("book2", "author2", 110 ,2500));
    book.add(new Bookproblem1("book3", "author3", 120 ,3000));
    System.out.println(" (Before Sorting) : " + book);
   // Collections.sort(book);

    System.out.println("\nEmployees (After Sorting) : " + book);
}
}

-----------------------------------------------------------------------------------------------------
14)
package practice2;

import java.util.ArrayList;

public class AccessProblem {
	public static void main(String[] args) {
		
	ArrayList<Integer> integers = new ArrayList<>();
	integers.add(10);
	integers.add(20);
	integers.add(30);
	integers.add(40);
	integers.add(50);
	integers.add(60);
	integers.add(70);
	integers.add(80);
	integers.add(90);
	integers.add(100);
	System.out.println("list is:" + integers);
	int n = integers.get(15);
    System.out.println(n);
}
}